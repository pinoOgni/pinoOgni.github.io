<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Portfolio on Giuseppe Ognibene</title>
    <link>https://pinoogni.github.io/portfolio/</link>
    <description>Recent content in Portfolio on Giuseppe Ognibene</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2021. Created by Giuseppe Ognibene, powered by Hugo, using the fantastic theme by [somrat](https://somrat.netlify.com)</copyright>
    <atom:link href="https://pinoogni.github.io/portfolio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CrownLabs</title>
      <link>https://pinoogni.github.io/portfolio/crownlabs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://pinoogni.github.io/portfolio/crownlabs/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/netgroup-polito/CrownLabs&#34;&gt;CrownLabs&lt;/a&gt; is a set of services designed to deliver remote computing labs through per-user environments, based either on virtual machines or lightweight containers.&lt;/p&gt;&#xA;&lt;p&gt;This service was set up in about three weeks by a group of students enrolled in the MSc of Computer Engineering at Polytechnic of Turin (Italy), under the pressure of the Coronavirus, in March 2020.&lt;/p&gt;&#xA;&lt;p&gt;CrownLabs is currently developed, maintained and operated by a group of volunteers, mainly MSc students in Computer Engineering at Polytechnic of Turin, Italy.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Polycube</title>
      <link>https://pinoogni.github.io/portfolio/polycube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://pinoogni.github.io/portfolio/polycube/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/polycube-network/polycube&#34;&gt;Polycube&lt;/a&gt; is an open source software framework that provides fast and lightweight network functions such as bridges, routers, firewalls, and others.&lt;/p&gt;&#xA;&lt;p&gt;Polycube services, called cubes, can be composed to build arbitrary service chains and provide custom network connectivity to namespaces, containers, virtual machines, and physical hosts.&lt;/p&gt;&#xA;&lt;h4 id=&#34;my-work-in-brief&#34;&gt;My work in brief&lt;/h4&gt;&#xA;&lt;p&gt;My work has focused on introducing custom metrics (defined in the YANG of each service) that can be collected and sent to an endpoint called &amp;ldquo;/metrics&amp;rdquo; which will later be read by Prometheus. An example of a metric is: how many IP addresses are set in the routing table of router R1.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Polycube and gRPC</title>
      <link>https://pinoogni.github.io/portfolio/polycube-grpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://pinoogni.github.io/portfolio/polycube-grpc/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/pinoOgni/polycube-grpc-service-libraries&#34;&gt;polycube-grpc-service-libraries&lt;/a&gt; allow the writing of a stand-alone Polycube service also in other languages.&lt;/p&gt;&#xA;&lt;p&gt;Polycube services, called cubes, can be composed to build arbitrary service chains and provide custom network connectivity to namespaces, containers, virtual machines, and physical hosts.&lt;/p&gt;&#xA;&lt;h4 id=&#34;my-work-in-brief&#34;&gt;My work in brief&lt;/h4&gt;&#xA;&lt;p&gt;I have created an architecture that allows the creation of network services in Polycube using languages such as GO, Python, C++ and other languages supported by gRPC. GRPC was chosen because it offers the possibility of running the controlplane part of a service even on a remote machine, different from where the dataplane is run. The work done would make it easier to get more developers to the Polycube open-source project.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Virgilium Editor</title>
      <link>https://pinoogni.github.io/portfolio/virgilium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://pinoogni.github.io/portfolio/virgilium/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/pinoOgni/VirgiliumEditor&#34;&gt;Virgilium Editor&lt;/a&gt; is the project of the System and Device Programming course of the year 2018/2019 from the Polytechnic of Turin. In short, a real-time text editor based on the CRDT algorithm, developed using Qt(5.12.3).&lt;/p&gt;&#xA;&lt;h4 id=&#34;my-work-in-brief&#34;&gt;My work in brief&lt;/h4&gt;&#xA;&lt;p&gt;In this project I took care of both the frontend and the backend part using Qt. In the frontend I have implemented the login screens and the user&amp;rsquo;s personal page with all the management and viewing of files. In the backend I have implemented the part relating to user access, to save files with all related queries (using sqlite3).&lt;/p&gt;</description>
    </item>
    <item>
      <title>VirtuaLabs</title>
      <link>https://pinoogni.github.io/portfolio/virtuallabs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://pinoogni.github.io/portfolio/virtuallabs/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/pinoOgni/VirtualLabsFE&#34;&gt;VirtualLabs&lt;/a&gt; is the project of the Internet Applications course of the academic year 2019/2020 of the Polytechnic of Turin.&lt;/p&gt;&#xA;&lt;p&gt;VirtualLabs is a web application that is used to help teachers and students manage virtual laboratories.&lt;/p&gt;&#xA;&lt;h4 id=&#34;my-work-in-brief&#34;&gt;My work in brief&lt;/h4&gt;&#xA;&lt;p&gt;In this project I took care of the frontend part using Angular in particular:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;team management by a student (creation, acceptance / rejection of a request, viewing of requests)&lt;/li&gt;&#xA;&lt;li&gt;management of an assignment by a professor (creation, review, grade, historical view)&lt;/li&gt;&#xA;&lt;li&gt;management of an assignment by a student (version delivery, visualization and more)&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
